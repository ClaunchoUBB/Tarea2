/* This file was generated by SableCC (http://www.sablecc.org/). */

package node;

import analysis.*;

@SuppressWarnings("nls")
public final class ACirculo extends PCirculo
{
    private TCirculoEti _circuloEti_;
    private PCx _cx_;
    private PCy _cy_;
    private PR _r_;
    private PFill _fill_;
    private PStroke _stroke_;
    private PStrokewidth _strokewidth_;
    private TFinfigura _finfigura_;
    private PFiguras _figuras_;

    public ACirculo()
    {
        // Constructor
    }

    public ACirculo(
        @SuppressWarnings("hiding") TCirculoEti _circuloEti_,
        @SuppressWarnings("hiding") PCx _cx_,
        @SuppressWarnings("hiding") PCy _cy_,
        @SuppressWarnings("hiding") PR _r_,
        @SuppressWarnings("hiding") PFill _fill_,
        @SuppressWarnings("hiding") PStroke _stroke_,
        @SuppressWarnings("hiding") PStrokewidth _strokewidth_,
        @SuppressWarnings("hiding") TFinfigura _finfigura_,
        @SuppressWarnings("hiding") PFiguras _figuras_)
    {
        // Constructor
        setCirculoEti(_circuloEti_);

        setCx(_cx_);

        setCy(_cy_);

        setR(_r_);

        setFill(_fill_);

        setStroke(_stroke_);

        setStrokewidth(_strokewidth_);

        setFinfigura(_finfigura_);

        setFiguras(_figuras_);

    }

    @Override
    public Object clone()
    {
        return new ACirculo(
            cloneNode(this._circuloEti_),
            cloneNode(this._cx_),
            cloneNode(this._cy_),
            cloneNode(this._r_),
            cloneNode(this._fill_),
            cloneNode(this._stroke_),
            cloneNode(this._strokewidth_),
            cloneNode(this._finfigura_),
            cloneNode(this._figuras_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseACirculo(this);
    }

    public TCirculoEti getCirculoEti()
    {
        return this._circuloEti_;
    }

    public void setCirculoEti(TCirculoEti node)
    {
        if(this._circuloEti_ != null)
        {
            this._circuloEti_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._circuloEti_ = node;
    }

    public PCx getCx()
    {
        return this._cx_;
    }

    public void setCx(PCx node)
    {
        if(this._cx_ != null)
        {
            this._cx_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._cx_ = node;
    }

    public PCy getCy()
    {
        return this._cy_;
    }

    public void setCy(PCy node)
    {
        if(this._cy_ != null)
        {
            this._cy_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._cy_ = node;
    }

    public PR getR()
    {
        return this._r_;
    }

    public void setR(PR node)
    {
        if(this._r_ != null)
        {
            this._r_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._r_ = node;
    }

    public PFill getFill()
    {
        return this._fill_;
    }

    public void setFill(PFill node)
    {
        if(this._fill_ != null)
        {
            this._fill_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._fill_ = node;
    }

    public PStroke getStroke()
    {
        return this._stroke_;
    }

    public void setStroke(PStroke node)
    {
        if(this._stroke_ != null)
        {
            this._stroke_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._stroke_ = node;
    }

    public PStrokewidth getStrokewidth()
    {
        return this._strokewidth_;
    }

    public void setStrokewidth(PStrokewidth node)
    {
        if(this._strokewidth_ != null)
        {
            this._strokewidth_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._strokewidth_ = node;
    }

    public TFinfigura getFinfigura()
    {
        return this._finfigura_;
    }

    public void setFinfigura(TFinfigura node)
    {
        if(this._finfigura_ != null)
        {
            this._finfigura_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._finfigura_ = node;
    }

    public PFiguras getFiguras()
    {
        return this._figuras_;
    }

    public void setFiguras(PFiguras node)
    {
        if(this._figuras_ != null)
        {
            this._figuras_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._figuras_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._circuloEti_)
            + toString(this._cx_)
            + toString(this._cy_)
            + toString(this._r_)
            + toString(this._fill_)
            + toString(this._stroke_)
            + toString(this._strokewidth_)
            + toString(this._finfigura_)
            + toString(this._figuras_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._circuloEti_ == child)
        {
            this._circuloEti_ = null;
            return;
        }

        if(this._cx_ == child)
        {
            this._cx_ = null;
            return;
        }

        if(this._cy_ == child)
        {
            this._cy_ = null;
            return;
        }

        if(this._r_ == child)
        {
            this._r_ = null;
            return;
        }

        if(this._fill_ == child)
        {
            this._fill_ = null;
            return;
        }

        if(this._stroke_ == child)
        {
            this._stroke_ = null;
            return;
        }

        if(this._strokewidth_ == child)
        {
            this._strokewidth_ = null;
            return;
        }

        if(this._finfigura_ == child)
        {
            this._finfigura_ = null;
            return;
        }

        if(this._figuras_ == child)
        {
            this._figuras_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._circuloEti_ == oldChild)
        {
            setCirculoEti((TCirculoEti) newChild);
            return;
        }

        if(this._cx_ == oldChild)
        {
            setCx((PCx) newChild);
            return;
        }

        if(this._cy_ == oldChild)
        {
            setCy((PCy) newChild);
            return;
        }

        if(this._r_ == oldChild)
        {
            setR((PR) newChild);
            return;
        }

        if(this._fill_ == oldChild)
        {
            setFill((PFill) newChild);
            return;
        }

        if(this._stroke_ == oldChild)
        {
            setStroke((PStroke) newChild);
            return;
        }

        if(this._strokewidth_ == oldChild)
        {
            setStrokewidth((PStrokewidth) newChild);
            return;
        }

        if(this._finfigura_ == oldChild)
        {
            setFinfigura((TFinfigura) newChild);
            return;
        }

        if(this._figuras_ == oldChild)
        {
            setFiguras((PFiguras) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
