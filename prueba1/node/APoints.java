/* This file was generated by SableCC (http://www.sablecc.org/). */

package node;

import analysis.*;

@SuppressWarnings("nls")
public final class APoints extends PPoints
{
    private TNumero _x_;
    private TComa _coma_;
    private TNumero _y_;
    private TEspacio _espacio_;

    public APoints()
    {
        // Constructor
    }

    public APoints(
        @SuppressWarnings("hiding") TNumero _x_,
        @SuppressWarnings("hiding") TComa _coma_,
        @SuppressWarnings("hiding") TNumero _y_,
        @SuppressWarnings("hiding") TEspacio _espacio_)
    {
        // Constructor
        setX(_x_);

        setComa(_coma_);

        setY(_y_);

        setEspacio(_espacio_);

    }

    @Override
    public Object clone()
    {
        return new APoints(
            cloneNode(this._x_),
            cloneNode(this._coma_),
            cloneNode(this._y_),
            cloneNode(this._espacio_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAPoints(this);
    }

    public TNumero getX()
    {
        return this._x_;
    }

    public void setX(TNumero node)
    {
        if(this._x_ != null)
        {
            this._x_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._x_ = node;
    }

    public TComa getComa()
    {
        return this._coma_;
    }

    public void setComa(TComa node)
    {
        if(this._coma_ != null)
        {
            this._coma_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._coma_ = node;
    }

    public TNumero getY()
    {
        return this._y_;
    }

    public void setY(TNumero node)
    {
        if(this._y_ != null)
        {
            this._y_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._y_ = node;
    }

    public TEspacio getEspacio()
    {
        return this._espacio_;
    }

    public void setEspacio(TEspacio node)
    {
        if(this._espacio_ != null)
        {
            this._espacio_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._espacio_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._x_)
            + toString(this._coma_)
            + toString(this._y_)
            + toString(this._espacio_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._x_ == child)
        {
            this._x_ = null;
            return;
        }

        if(this._coma_ == child)
        {
            this._coma_ = null;
            return;
        }

        if(this._y_ == child)
        {
            this._y_ = null;
            return;
        }

        if(this._espacio_ == child)
        {
            this._espacio_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._x_ == oldChild)
        {
            setX((TNumero) newChild);
            return;
        }

        if(this._coma_ == oldChild)
        {
            setComa((TComa) newChild);
            return;
        }

        if(this._y_ == oldChild)
        {
            setY((TNumero) newChild);
            return;
        }

        if(this._espacio_ == oldChild)
        {
            setEspacio((TEspacio) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
