/* This file was generated by SableCC (http://www.sablecc.org/). */

package node;

import analysis.*;

@SuppressWarnings("nls")
public final class AStyle extends PStyle
{
    private TStylew _stylew_;
    private TComillas _iniciostyle_;
    private PFill _fill_;
    private TSemicolon _primerseparador_;
    private PStroke _stroke_;
    private TSemicolon _segundoseparador_;
    private PStrokewidth _strokewidth_;
    private TComillas _finstyle_;

    public AStyle()
    {
        // Constructor
    }

    public AStyle(
        @SuppressWarnings("hiding") TStylew _stylew_,
        @SuppressWarnings("hiding") TComillas _iniciostyle_,
        @SuppressWarnings("hiding") PFill _fill_,
        @SuppressWarnings("hiding") TSemicolon _primerseparador_,
        @SuppressWarnings("hiding") PStroke _stroke_,
        @SuppressWarnings("hiding") TSemicolon _segundoseparador_,
        @SuppressWarnings("hiding") PStrokewidth _strokewidth_,
        @SuppressWarnings("hiding") TComillas _finstyle_)
    {
        // Constructor
        setStylew(_stylew_);

        setIniciostyle(_iniciostyle_);

        setFill(_fill_);

        setPrimerseparador(_primerseparador_);

        setStroke(_stroke_);

        setSegundoseparador(_segundoseparador_);

        setStrokewidth(_strokewidth_);

        setFinstyle(_finstyle_);

    }

    @Override
    public Object clone()
    {
        return new AStyle(
            cloneNode(this._stylew_),
            cloneNode(this._iniciostyle_),
            cloneNode(this._fill_),
            cloneNode(this._primerseparador_),
            cloneNode(this._stroke_),
            cloneNode(this._segundoseparador_),
            cloneNode(this._strokewidth_),
            cloneNode(this._finstyle_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAStyle(this);
    }

    public TStylew getStylew()
    {
        return this._stylew_;
    }

    public void setStylew(TStylew node)
    {
        if(this._stylew_ != null)
        {
            this._stylew_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._stylew_ = node;
    }

    public TComillas getIniciostyle()
    {
        return this._iniciostyle_;
    }

    public void setIniciostyle(TComillas node)
    {
        if(this._iniciostyle_ != null)
        {
            this._iniciostyle_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._iniciostyle_ = node;
    }

    public PFill getFill()
    {
        return this._fill_;
    }

    public void setFill(PFill node)
    {
        if(this._fill_ != null)
        {
            this._fill_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._fill_ = node;
    }

    public TSemicolon getPrimerseparador()
    {
        return this._primerseparador_;
    }

    public void setPrimerseparador(TSemicolon node)
    {
        if(this._primerseparador_ != null)
        {
            this._primerseparador_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._primerseparador_ = node;
    }

    public PStroke getStroke()
    {
        return this._stroke_;
    }

    public void setStroke(PStroke node)
    {
        if(this._stroke_ != null)
        {
            this._stroke_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._stroke_ = node;
    }

    public TSemicolon getSegundoseparador()
    {
        return this._segundoseparador_;
    }

    public void setSegundoseparador(TSemicolon node)
    {
        if(this._segundoseparador_ != null)
        {
            this._segundoseparador_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._segundoseparador_ = node;
    }

    public PStrokewidth getStrokewidth()
    {
        return this._strokewidth_;
    }

    public void setStrokewidth(PStrokewidth node)
    {
        if(this._strokewidth_ != null)
        {
            this._strokewidth_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._strokewidth_ = node;
    }

    public TComillas getFinstyle()
    {
        return this._finstyle_;
    }

    public void setFinstyle(TComillas node)
    {
        if(this._finstyle_ != null)
        {
            this._finstyle_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._finstyle_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._stylew_)
            + toString(this._iniciostyle_)
            + toString(this._fill_)
            + toString(this._primerseparador_)
            + toString(this._stroke_)
            + toString(this._segundoseparador_)
            + toString(this._strokewidth_)
            + toString(this._finstyle_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._stylew_ == child)
        {
            this._stylew_ = null;
            return;
        }

        if(this._iniciostyle_ == child)
        {
            this._iniciostyle_ = null;
            return;
        }

        if(this._fill_ == child)
        {
            this._fill_ = null;
            return;
        }

        if(this._primerseparador_ == child)
        {
            this._primerseparador_ = null;
            return;
        }

        if(this._stroke_ == child)
        {
            this._stroke_ = null;
            return;
        }

        if(this._segundoseparador_ == child)
        {
            this._segundoseparador_ = null;
            return;
        }

        if(this._strokewidth_ == child)
        {
            this._strokewidth_ = null;
            return;
        }

        if(this._finstyle_ == child)
        {
            this._finstyle_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._stylew_ == oldChild)
        {
            setStylew((TStylew) newChild);
            return;
        }

        if(this._iniciostyle_ == oldChild)
        {
            setIniciostyle((TComillas) newChild);
            return;
        }

        if(this._fill_ == oldChild)
        {
            setFill((PFill) newChild);
            return;
        }

        if(this._primerseparador_ == oldChild)
        {
            setPrimerseparador((TSemicolon) newChild);
            return;
        }

        if(this._stroke_ == oldChild)
        {
            setStroke((PStroke) newChild);
            return;
        }

        if(this._segundoseparador_ == oldChild)
        {
            setSegundoseparador((TSemicolon) newChild);
            return;
        }

        if(this._strokewidth_ == oldChild)
        {
            setStrokewidth((PStrokewidth) newChild);
            return;
        }

        if(this._finstyle_ == oldChild)
        {
            setFinstyle((TComillas) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
