/* This file was generated by SableCC (http://www.sablecc.org/). */

package parser;

import lexer.*;
import node.*;
import analysis.*;
import java.util.*;

import java.io.DataInputStream;
import java.io.BufferedInputStream;
import java.io.IOException;

@SuppressWarnings("nls")
public class Parser
{
    public final Analysis ignoredTokens = new AnalysisAdapter();

    protected ArrayList<Object> nodeList;

    private final Lexer lexer;
    private final ListIterator<Object> stack = new LinkedList<Object>().listIterator();
    private int last_pos;
    private int last_line;
    private Token last_token;
    private final TokenIndex converter = new TokenIndex();
    private final int[] action = new int[2];

    private final static int SHIFT = 0;
    private final static int REDUCE = 1;
    private final static int ACCEPT = 2;
    private final static int ERROR = 3;

    public Parser(@SuppressWarnings("hiding") Lexer lexer)
    {
        this.lexer = lexer;
    }

    protected void filter() throws ParserException, LexerException, IOException
    {
        // Empty body
    }

    private void push(int numstate, ArrayList<Object> listNode, boolean hidden) throws ParserException, LexerException, IOException
    {
        this.nodeList = listNode;

        if(!hidden)
        {
            filter();
        }

        if(!this.stack.hasNext())
        {
            this.stack.add(new State(numstate, this.nodeList));
            return;
        }

        State s = (State) this.stack.next();
        s.state = numstate;
        s.nodes = this.nodeList;
    }

    private int goTo(int index)
    {
        int state = state();
        int low = 1;
        int high = gotoTable[index].length - 1;
        int value = gotoTable[index][0][1];

        while(low <= high)
        {
            // int middle = (low + high) / 2;
            int middle = (low + high) >>> 1;

            if(state < gotoTable[index][middle][0])
            {
                high = middle - 1;
            }
            else if(state > gotoTable[index][middle][0])
            {
                low = middle + 1;
            }
            else
            {
                value = gotoTable[index][middle][1];
                break;
            }
        }

        return value;
    }

    private int state()
    {
        State s = (State) this.stack.previous();
        this.stack.next();
        return s.state;
    }

    private ArrayList<Object> pop()
    {
        return ((State) this.stack.previous()).nodes;
    }

    private int index(Switchable token)
    {
        this.converter.index = -1;
        token.apply(this.converter);
        return this.converter.index;
    }

    @SuppressWarnings("unchecked")
    public Start parse() throws ParserException, LexerException, IOException
    {
        push(0, null, true);
        List<Node> ign = null;
        while(true)
        {
            while(index(this.lexer.peek()) == -1)
            {
                if(ign == null)
                {
                    ign = new LinkedList<Node>();
                }

                ign.add(this.lexer.next());
            }

            if(ign != null)
            {
                this.ignoredTokens.setIn(this.lexer.peek(), ign);
                ign = null;
            }

            this.last_pos = this.lexer.peek().getPos();
            this.last_line = this.lexer.peek().getLine();
            this.last_token = this.lexer.peek();

            int index = index(this.lexer.peek());
            this.action[0] = Parser.actionTable[state()][0][1];
            this.action[1] = Parser.actionTable[state()][0][2];

            int low = 1;
            int high = Parser.actionTable[state()].length - 1;

            while(low <= high)
            {
                int middle = (low + high) / 2;

                if(index < Parser.actionTable[state()][middle][0])
                {
                    high = middle - 1;
                }
                else if(index > Parser.actionTable[state()][middle][0])
                {
                    low = middle + 1;
                }
                else
                {
                    this.action[0] = Parser.actionTable[state()][middle][1];
                    this.action[1] = Parser.actionTable[state()][middle][2];
                    break;
                }
            }

            switch(this.action[0])
            {
                case SHIFT:
		    {
		        ArrayList<Object> list = new ArrayList<Object>();
		        list.add(this.lexer.next());
                        push(this.action[1], list, false);
                    }
		    break;
                case REDUCE:
                    {
                        int reduction = this.action[1];
                        if(reduction < 500) reduce_0(reduction);
                    }
                    break;
                case ACCEPT:
                    {
                        EOF node2 = (EOF) this.lexer.next();
                        PTipodedoc node1 = (PTipodedoc) pop().get(0);
                        Start node = new Start(node1, node2);
                        return node;
                    }
                case ERROR:
                    throw new ParserException(this.last_token,
                        "[" + this.last_line + "," + this.last_pos + "] " +
                        Parser.errorMessages[Parser.errors[this.action[1]]]);
            }
        }
    }

    private void reduce_0(int reduction) throws IOException, LexerException, ParserException
    {
        switch(reduction)
        {
            case 0: /* reduce ATipodedoc */
            {
                ArrayList<Object> list = new0();
                push(goTo(0), list, false);
            }
            break;
            case 1: /* reduce AFightml */
            {
                ArrayList<Object> list = new1();
                push(goTo(1), list, false);
            }
            break;
            case 2: /* reduce ACuerpo */
            {
                ArrayList<Object> list = new2();
                push(goTo(2), list, false);
            }
            break;
            case 3: /* reduce ASvg */
            {
                ArrayList<Object> list = new3();
                push(goTo(3), list, false);
            }
            break;
            case 4: /* reduce ADatosvg */
            {
                ArrayList<Object> list = new4();
                push(goTo(4), list, false);
            }
            break;
            case 5: /* reduce AFiguras */
            {
                ArrayList<Object> list = new5();
                push(goTo(5), list, false);
            }
            break;
            case 6: /* reduce ACirculoFiguras */
            {
                ArrayList<Object> list = new6();
                push(goTo(5), list, false);
            }
            break;
            case 7: /* reduce ALineaFiguras */
            {
                ArrayList<Object> list = new7();
                push(goTo(5), list, false);
            }
            break;
            case 8: /* reduce ARectanguloFiguras */
            {
                ArrayList<Object> list = new8();
                push(goTo(5), list, false);
            }
            break;
            case 9: /* reduce AElipseFiguras */
            {
                ArrayList<Object> list = new9();
                push(goTo(5), list, false);
            }
            break;
            case 10: /* reduce APoligonoFiguras */
            {
                ArrayList<Object> list = new10();
                push(goTo(5), list, false);
            }
            break;
            case 11: /* reduce APolilineaFiguras */
            {
                ArrayList<Object> list = new11();
                push(goTo(5), list, false);
            }
            break;
            case 12: /* reduce AAcirculo1Circulo */
            {
                ArrayList<Object> list = new12();
                push(goTo(6), list, false);
            }
            break;
            case 13: /* reduce AAcirculo2Circulo */
            {
                ArrayList<Object> list = new13();
                push(goTo(6), list, false);
            }
            break;
            case 14: /* reduce AAcirculo3Circulo */
            {
                ArrayList<Object> list = new14();
                push(goTo(6), list, false);
            }
            break;
            case 15: /* reduce AAcirculo4Circulo */
            {
                ArrayList<Object> list = new15();
                push(goTo(6), list, false);
            }
            break;
            case 16: /* reduce AAcirculo5Circulo */
            {
                ArrayList<Object> list = new16();
                push(goTo(6), list, false);
            }
            break;
            case 17: /* reduce AAcirculo6Circulo */
            {
                ArrayList<Object> list = new17();
                push(goTo(6), list, false);
            }
            break;
            case 18: /* reduce AAcirculo7Circulo */
            {
                ArrayList<Object> list = new18();
                push(goTo(6), list, false);
            }
            break;
            case 19: /* reduce AAcirculo8Circulo */
            {
                ArrayList<Object> list = new19();
                push(goTo(6), list, false);
            }
            break;
            case 20: /* reduce ACx */
            {
                ArrayList<Object> list = new20();
                push(goTo(7), list, false);
            }
            break;
            case 21: /* reduce ACy */
            {
                ArrayList<Object> list = new21();
                push(goTo(8), list, false);
            }
            break;
            case 22: /* reduce AR */
            {
                ArrayList<Object> list = new22();
                push(goTo(9), list, false);
            }
            break;
            case 23: /* reduce AFill */
            {
                ArrayList<Object> list = new23();
                push(goTo(10), list, false);
            }
            break;
            case 24: /* reduce AStroke */
            {
                ArrayList<Object> list = new24();
                push(goTo(11), list, false);
            }
            break;
            case 25: /* reduce AStrokewidth */
            {
                ArrayList<Object> list = new25();
                push(goTo(12), list, false);
            }
            break;
            case 26: /* reduce AStyle */
            {
                ArrayList<Object> list = new26();
                push(goTo(13), list, false);
            }
            break;
            case 27: /* reduce ALinestyle */
            {
                ArrayList<Object> list = new27();
                push(goTo(14), list, false);
            }
            break;
            case 28: /* reduce ALinea */
            {
                ArrayList<Object> list = new28();
                push(goTo(15), list, false);
            }
            break;
            case 29: /* reduce AX1 */
            {
                ArrayList<Object> list = new29();
                push(goTo(16), list, false);
            }
            break;
            case 30: /* reduce AX2 */
            {
                ArrayList<Object> list = new30();
                push(goTo(17), list, false);
            }
            break;
            case 31: /* reduce AY1 */
            {
                ArrayList<Object> list = new31();
                push(goTo(18), list, false);
            }
            break;
            case 32: /* reduce AY2 */
            {
                ArrayList<Object> list = new32();
                push(goTo(19), list, false);
            }
            break;
            case 33: /* reduce ARectangulo */
            {
                ArrayList<Object> list = new33();
                push(goTo(20), list, false);
            }
            break;
            case 34: /* reduce AX */
            {
                ArrayList<Object> list = new34();
                push(goTo(21), list, false);
            }
            break;
            case 35: /* reduce AY */
            {
                ArrayList<Object> list = new35();
                push(goTo(22), list, false);
            }
            break;
            case 36: /* reduce AElipse */
            {
                ArrayList<Object> list = new36();
                push(goTo(23), list, false);
            }
            break;
            case 37: /* reduce ARx */
            {
                ArrayList<Object> list = new37();
                push(goTo(24), list, false);
            }
            break;
            case 38: /* reduce ARy */
            {
                ArrayList<Object> list = new38();
                push(goTo(25), list, false);
            }
            break;
            case 39: /* reduce APoligono */
            {
                ArrayList<Object> list = new39();
                push(goTo(26), list, false);
            }
            break;
            case 40: /* reduce APoints */
            {
                ArrayList<Object> list = new40();
                push(goTo(27), list, false);
            }
            break;
            case 41: /* reduce APolilinea */
            {
                ArrayList<Object> list = new41();
                push(goTo(28), list, false);
            }
            break;
        }
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new0() /* reduce ATipodedoc */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipodedoc ptipodedocNode1;
        {
            // Block
        TDoctype tdoctypeNode2;
        TCerrar tcerrarNode3;
        PFightml pfightmlNode4;
        tdoctypeNode2 = (TDoctype)nodeArrayList1.get(0);
        tcerrarNode3 = (TCerrar)nodeArrayList2.get(0);
        pfightmlNode4 = (PFightml)nodeArrayList3.get(0);

        ptipodedocNode1 = new ATipodedoc(tdoctypeNode2, tcerrarNode3, pfightmlNode4);
        }
	nodeList.add(ptipodedocNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new1() /* reduce AFightml */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFightml pfightmlNode1;
        {
            // Block
        THtml thtmlNode2;
        PCuerpo pcuerpoNode3;
        TFinhtml tfinhtmlNode4;
        thtmlNode2 = (THtml)nodeArrayList1.get(0);
        pcuerpoNode3 = (PCuerpo)nodeArrayList2.get(0);
        tfinhtmlNode4 = (TFinhtml)nodeArrayList3.get(0);

        pfightmlNode1 = new AFightml(thtmlNode2, pcuerpoNode3, tfinhtmlNode4);
        }
	nodeList.add(pfightmlNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new2() /* reduce ACuerpo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCuerpo pcuerpoNode1;
        {
            // Block
        TBody tbodyNode2;
        PSvg psvgNode3;
        TFinbody tfinbodyNode4;
        tbodyNode2 = (TBody)nodeArrayList1.get(0);
        psvgNode3 = (PSvg)nodeArrayList2.get(0);
        tfinbodyNode4 = (TFinbody)nodeArrayList3.get(0);

        pcuerpoNode1 = new ACuerpo(tbodyNode2, psvgNode3, tfinbodyNode4);
        }
	nodeList.add(pcuerpoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new3() /* reduce ASvg */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSvg psvgNode1;
        {
            // Block
        TSvgEti tsvgetiNode2;
        PDatosvg pdatosvgNode3;
        TCerrar tcerrarNode4;
        TTab ttabNode5;
        PFiguras pfigurasNode6;
        tsvgetiNode2 = (TSvgEti)nodeArrayList1.get(0);
        pdatosvgNode3 = (PDatosvg)nodeArrayList2.get(0);
        tcerrarNode4 = (TCerrar)nodeArrayList3.get(0);
        ttabNode5 = (TTab)nodeArrayList4.get(0);
        pfigurasNode6 = (PFiguras)nodeArrayList5.get(0);

        psvgNode1 = new ASvg(tsvgetiNode2, pdatosvgNode3, tcerrarNode4, ttabNode5, pfigurasNode6);
        }
	nodeList.add(psvgNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new4() /* reduce ADatosvg */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDatosvg pdatosvgNode1;
        {
            // Block
        TWidth twidthNode2;
        THeight theightNode3;
        twidthNode2 = (TWidth)nodeArrayList1.get(0);
        theightNode3 = (THeight)nodeArrayList2.get(0);

        pdatosvgNode1 = new ADatosvg(twidthNode2, theightNode3);
        }
	nodeList.add(pdatosvgNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new5() /* reduce AFiguras */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFiguras pfigurasNode1;
        {
            // Block
        TFinsvg tfinsvgNode2;
        tfinsvgNode2 = (TFinsvg)nodeArrayList1.get(0);

        pfigurasNode1 = new AFiguras(tfinsvgNode2);
        }
	nodeList.add(pfigurasNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new6() /* reduce ACirculoFiguras */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFiguras pfigurasNode1;
        {
            // Block
        PCirculo pcirculoNode2;
        pcirculoNode2 = (PCirculo)nodeArrayList1.get(0);

        pfigurasNode1 = new ACirculoFiguras(pcirculoNode2);
        }
	nodeList.add(pfigurasNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new7() /* reduce ALineaFiguras */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFiguras pfigurasNode1;
        {
            // Block
        PLinea plineaNode2;
        plineaNode2 = (PLinea)nodeArrayList1.get(0);

        pfigurasNode1 = new ALineaFiguras(plineaNode2);
        }
	nodeList.add(pfigurasNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new8() /* reduce ARectanguloFiguras */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFiguras pfigurasNode1;
        {
            // Block
        PRectangulo prectanguloNode2;
        prectanguloNode2 = (PRectangulo)nodeArrayList1.get(0);

        pfigurasNode1 = new ARectanguloFiguras(prectanguloNode2);
        }
	nodeList.add(pfigurasNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new9() /* reduce AElipseFiguras */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFiguras pfigurasNode1;
        {
            // Block
        PElipse pelipseNode2;
        pelipseNode2 = (PElipse)nodeArrayList1.get(0);

        pfigurasNode1 = new AElipseFiguras(pelipseNode2);
        }
	nodeList.add(pfigurasNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new10() /* reduce APoligonoFiguras */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFiguras pfigurasNode1;
        {
            // Block
        PPoligono ppoligonoNode2;
        ppoligonoNode2 = (PPoligono)nodeArrayList1.get(0);

        pfigurasNode1 = new APoligonoFiguras(ppoligonoNode2);
        }
	nodeList.add(pfigurasNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new11() /* reduce APolilineaFiguras */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFiguras pfigurasNode1;
        {
            // Block
        PPolilinea ppolilineaNode2;
        ppolilineaNode2 = (PPolilinea)nodeArrayList1.get(0);

        pfigurasNode1 = new APolilineaFiguras(ppolilineaNode2);
        }
	nodeList.add(pfigurasNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new12() /* reduce AAcirculo1Circulo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCirculo pcirculoNode1;
        {
            // Block
        TCirculoEti tcirculoetiNode2;
        PCx pcxNode3;
        PCy pcyNode4;
        PR prNode5;
        @SuppressWarnings("unused") Object nullNode6 = null;
        @SuppressWarnings("unused") Object nullNode7 = null;
        @SuppressWarnings("unused") Object nullNode8 = null;
        TFinfigura tfinfiguraNode9;
        PFiguras pfigurasNode10;
        tcirculoetiNode2 = (TCirculoEti)nodeArrayList1.get(0);
        pcxNode3 = (PCx)nodeArrayList2.get(0);
        pcyNode4 = (PCy)nodeArrayList3.get(0);
        prNode5 = (PR)nodeArrayList4.get(0);
        tfinfiguraNode9 = (TFinfigura)nodeArrayList5.get(0);
        pfigurasNode10 = (PFiguras)nodeArrayList6.get(0);

        pcirculoNode1 = new ACirculo(tcirculoetiNode2, pcxNode3, pcyNode4, prNode5, null, null, null, tfinfiguraNode9, pfigurasNode10);
        }
	nodeList.add(pcirculoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new13() /* reduce AAcirculo2Circulo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCirculo pcirculoNode1;
        {
            // Block
        TCirculoEti tcirculoetiNode2;
        PCx pcxNode3;
        PCy pcyNode4;
        PR prNode5;
        PFill pfillNode6;
        @SuppressWarnings("unused") Object nullNode7 = null;
        @SuppressWarnings("unused") Object nullNode8 = null;
        TFinfigura tfinfiguraNode9;
        PFiguras pfigurasNode10;
        tcirculoetiNode2 = (TCirculoEti)nodeArrayList1.get(0);
        pcxNode3 = (PCx)nodeArrayList2.get(0);
        pcyNode4 = (PCy)nodeArrayList3.get(0);
        prNode5 = (PR)nodeArrayList4.get(0);
        pfillNode6 = (PFill)nodeArrayList5.get(0);
        tfinfiguraNode9 = (TFinfigura)nodeArrayList6.get(0);
        pfigurasNode10 = (PFiguras)nodeArrayList7.get(0);

        pcirculoNode1 = new ACirculo(tcirculoetiNode2, pcxNode3, pcyNode4, prNode5, pfillNode6, null, null, tfinfiguraNode9, pfigurasNode10);
        }
	nodeList.add(pcirculoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new14() /* reduce AAcirculo3Circulo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCirculo pcirculoNode1;
        {
            // Block
        TCirculoEti tcirculoetiNode2;
        PCx pcxNode3;
        PCy pcyNode4;
        PR prNode5;
        @SuppressWarnings("unused") Object nullNode6 = null;
        PStroke pstrokeNode7;
        @SuppressWarnings("unused") Object nullNode8 = null;
        TFinfigura tfinfiguraNode9;
        PFiguras pfigurasNode10;
        tcirculoetiNode2 = (TCirculoEti)nodeArrayList1.get(0);
        pcxNode3 = (PCx)nodeArrayList2.get(0);
        pcyNode4 = (PCy)nodeArrayList3.get(0);
        prNode5 = (PR)nodeArrayList4.get(0);
        pstrokeNode7 = (PStroke)nodeArrayList5.get(0);
        tfinfiguraNode9 = (TFinfigura)nodeArrayList6.get(0);
        pfigurasNode10 = (PFiguras)nodeArrayList7.get(0);

        pcirculoNode1 = new ACirculo(tcirculoetiNode2, pcxNode3, pcyNode4, prNode5, null, pstrokeNode7, null, tfinfiguraNode9, pfigurasNode10);
        }
	nodeList.add(pcirculoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new15() /* reduce AAcirculo4Circulo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCirculo pcirculoNode1;
        {
            // Block
        TCirculoEti tcirculoetiNode2;
        PCx pcxNode3;
        PCy pcyNode4;
        PR prNode5;
        PFill pfillNode6;
        PStroke pstrokeNode7;
        @SuppressWarnings("unused") Object nullNode8 = null;
        TFinfigura tfinfiguraNode9;
        PFiguras pfigurasNode10;
        tcirculoetiNode2 = (TCirculoEti)nodeArrayList1.get(0);
        pcxNode3 = (PCx)nodeArrayList2.get(0);
        pcyNode4 = (PCy)nodeArrayList3.get(0);
        prNode5 = (PR)nodeArrayList4.get(0);
        pfillNode6 = (PFill)nodeArrayList5.get(0);
        pstrokeNode7 = (PStroke)nodeArrayList6.get(0);
        tfinfiguraNode9 = (TFinfigura)nodeArrayList7.get(0);
        pfigurasNode10 = (PFiguras)nodeArrayList8.get(0);

        pcirculoNode1 = new ACirculo(tcirculoetiNode2, pcxNode3, pcyNode4, prNode5, pfillNode6, pstrokeNode7, null, tfinfiguraNode9, pfigurasNode10);
        }
	nodeList.add(pcirculoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new16() /* reduce AAcirculo5Circulo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCirculo pcirculoNode1;
        {
            // Block
        TCirculoEti tcirculoetiNode2;
        PCx pcxNode3;
        PCy pcyNode4;
        PR prNode5;
        @SuppressWarnings("unused") Object nullNode6 = null;
        @SuppressWarnings("unused") Object nullNode7 = null;
        PStrokewidth pstrokewidthNode8;
        TFinfigura tfinfiguraNode9;
        PFiguras pfigurasNode10;
        tcirculoetiNode2 = (TCirculoEti)nodeArrayList1.get(0);
        pcxNode3 = (PCx)nodeArrayList2.get(0);
        pcyNode4 = (PCy)nodeArrayList3.get(0);
        prNode5 = (PR)nodeArrayList4.get(0);
        pstrokewidthNode8 = (PStrokewidth)nodeArrayList5.get(0);
        tfinfiguraNode9 = (TFinfigura)nodeArrayList6.get(0);
        pfigurasNode10 = (PFiguras)nodeArrayList7.get(0);

        pcirculoNode1 = new ACirculo(tcirculoetiNode2, pcxNode3, pcyNode4, prNode5, null, null, pstrokewidthNode8, tfinfiguraNode9, pfigurasNode10);
        }
	nodeList.add(pcirculoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new17() /* reduce AAcirculo6Circulo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCirculo pcirculoNode1;
        {
            // Block
        TCirculoEti tcirculoetiNode2;
        PCx pcxNode3;
        PCy pcyNode4;
        PR prNode5;
        PFill pfillNode6;
        @SuppressWarnings("unused") Object nullNode7 = null;
        PStrokewidth pstrokewidthNode8;
        TFinfigura tfinfiguraNode9;
        PFiguras pfigurasNode10;
        tcirculoetiNode2 = (TCirculoEti)nodeArrayList1.get(0);
        pcxNode3 = (PCx)nodeArrayList2.get(0);
        pcyNode4 = (PCy)nodeArrayList3.get(0);
        prNode5 = (PR)nodeArrayList4.get(0);
        pfillNode6 = (PFill)nodeArrayList5.get(0);
        pstrokewidthNode8 = (PStrokewidth)nodeArrayList6.get(0);
        tfinfiguraNode9 = (TFinfigura)nodeArrayList7.get(0);
        pfigurasNode10 = (PFiguras)nodeArrayList8.get(0);

        pcirculoNode1 = new ACirculo(tcirculoetiNode2, pcxNode3, pcyNode4, prNode5, pfillNode6, null, pstrokewidthNode8, tfinfiguraNode9, pfigurasNode10);
        }
	nodeList.add(pcirculoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new18() /* reduce AAcirculo7Circulo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCirculo pcirculoNode1;
        {
            // Block
        TCirculoEti tcirculoetiNode2;
        PCx pcxNode3;
        PCy pcyNode4;
        PR prNode5;
        @SuppressWarnings("unused") Object nullNode6 = null;
        PStroke pstrokeNode7;
        PStrokewidth pstrokewidthNode8;
        TFinfigura tfinfiguraNode9;
        PFiguras pfigurasNode10;
        tcirculoetiNode2 = (TCirculoEti)nodeArrayList1.get(0);
        pcxNode3 = (PCx)nodeArrayList2.get(0);
        pcyNode4 = (PCy)nodeArrayList3.get(0);
        prNode5 = (PR)nodeArrayList4.get(0);
        pstrokeNode7 = (PStroke)nodeArrayList5.get(0);
        pstrokewidthNode8 = (PStrokewidth)nodeArrayList6.get(0);
        tfinfiguraNode9 = (TFinfigura)nodeArrayList7.get(0);
        pfigurasNode10 = (PFiguras)nodeArrayList8.get(0);

        pcirculoNode1 = new ACirculo(tcirculoetiNode2, pcxNode3, pcyNode4, prNode5, null, pstrokeNode7, pstrokewidthNode8, tfinfiguraNode9, pfigurasNode10);
        }
	nodeList.add(pcirculoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new19() /* reduce AAcirculo8Circulo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList9 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCirculo pcirculoNode1;
        {
            // Block
        TCirculoEti tcirculoetiNode2;
        PCx pcxNode3;
        PCy pcyNode4;
        PR prNode5;
        PFill pfillNode6;
        PStroke pstrokeNode7;
        PStrokewidth pstrokewidthNode8;
        TFinfigura tfinfiguraNode9;
        PFiguras pfigurasNode10;
        tcirculoetiNode2 = (TCirculoEti)nodeArrayList1.get(0);
        pcxNode3 = (PCx)nodeArrayList2.get(0);
        pcyNode4 = (PCy)nodeArrayList3.get(0);
        prNode5 = (PR)nodeArrayList4.get(0);
        pfillNode6 = (PFill)nodeArrayList5.get(0);
        pstrokeNode7 = (PStroke)nodeArrayList6.get(0);
        pstrokewidthNode8 = (PStrokewidth)nodeArrayList7.get(0);
        tfinfiguraNode9 = (TFinfigura)nodeArrayList8.get(0);
        pfigurasNode10 = (PFiguras)nodeArrayList9.get(0);

        pcirculoNode1 = new ACirculo(tcirculoetiNode2, pcxNode3, pcyNode4, prNode5, pfillNode6, pstrokeNode7, pstrokewidthNode8, tfinfiguraNode9, pfigurasNode10);
        }
	nodeList.add(pcirculoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new20() /* reduce ACx */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCx pcxNode1;
        {
            // Block
        TCxw tcxwNode2;
        TValor tvalorNode3;
        tcxwNode2 = (TCxw)nodeArrayList1.get(0);
        tvalorNode3 = (TValor)nodeArrayList2.get(0);

        pcxNode1 = new ACx(tcxwNode2, tvalorNode3);
        }
	nodeList.add(pcxNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new21() /* reduce ACy */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCy pcyNode1;
        {
            // Block
        TCyw tcywNode2;
        TValor tvalorNode3;
        tcywNode2 = (TCyw)nodeArrayList1.get(0);
        tvalorNode3 = (TValor)nodeArrayList2.get(0);

        pcyNode1 = new ACy(tcywNode2, tvalorNode3);
        }
	nodeList.add(pcyNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new22() /* reduce AR */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PR prNode1;
        {
            // Block
        TRw trwNode2;
        TValor tvalorNode3;
        trwNode2 = (TRw)nodeArrayList1.get(0);
        tvalorNode3 = (TValor)nodeArrayList2.get(0);

        prNode1 = new AR(trwNode2, tvalorNode3);
        }
	nodeList.add(prNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new23() /* reduce AFill */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFill pfillNode1;
        {
            // Block
        TFillw tfillwNode2;
        TValor tvalorNode3;
        tfillwNode2 = (TFillw)nodeArrayList1.get(0);
        tvalorNode3 = (TValor)nodeArrayList2.get(0);

        pfillNode1 = new AFill(tfillwNode2, tvalorNode3);
        }
	nodeList.add(pfillNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new24() /* reduce AStroke */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PStroke pstrokeNode1;
        {
            // Block
        TStrokew tstrokewNode2;
        TValor tvalorNode3;
        tstrokewNode2 = (TStrokew)nodeArrayList1.get(0);
        tvalorNode3 = (TValor)nodeArrayList2.get(0);

        pstrokeNode1 = new AStroke(tstrokewNode2, tvalorNode3);
        }
	nodeList.add(pstrokeNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new25() /* reduce AStrokewidth */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PStrokewidth pstrokewidthNode1;
        {
            // Block
        TStrokewidthw tstrokewidthwNode2;
        TValor tvalorNode3;
        tstrokewidthwNode2 = (TStrokewidthw)nodeArrayList1.get(0);
        tvalorNode3 = (TValor)nodeArrayList2.get(0);

        pstrokewidthNode1 = new AStrokewidth(tstrokewidthwNode2, tvalorNode3);
        }
	nodeList.add(pstrokewidthNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new26() /* reduce AStyle */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PStyle pstyleNode1;
        {
            // Block
        TStylew tstylewNode2;
        TComillas tcomillasNode3;
        PFill pfillNode4;
        TSemicolon tsemicolonNode5;
        PStroke pstrokeNode6;
        TSemicolon tsemicolonNode7;
        PStrokewidth pstrokewidthNode8;
        TComillas tcomillasNode9;
        tstylewNode2 = (TStylew)nodeArrayList1.get(0);
        tcomillasNode3 = (TComillas)nodeArrayList2.get(0);
        pfillNode4 = (PFill)nodeArrayList3.get(0);
        tsemicolonNode5 = (TSemicolon)nodeArrayList4.get(0);
        pstrokeNode6 = (PStroke)nodeArrayList5.get(0);
        tsemicolonNode7 = (TSemicolon)nodeArrayList6.get(0);
        pstrokewidthNode8 = (PStrokewidth)nodeArrayList7.get(0);
        tcomillasNode9 = (TComillas)nodeArrayList8.get(0);

        pstyleNode1 = new AStyle(tstylewNode2, tcomillasNode3, pfillNode4, tsemicolonNode5, pstrokeNode6, tsemicolonNode7, pstrokewidthNode8, tcomillasNode9);
        }
	nodeList.add(pstyleNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new27() /* reduce ALinestyle */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PLinestyle plinestyleNode1;
        {
            // Block
        TStylew tstylewNode2;
        TComillas tcomillasNode3;
        PStroke pstrokeNode4;
        TSemicolon tsemicolonNode5;
        PStrokewidth pstrokewidthNode6;
        TComillas tcomillasNode7;
        tstylewNode2 = (TStylew)nodeArrayList1.get(0);
        tcomillasNode3 = (TComillas)nodeArrayList2.get(0);
        pstrokeNode4 = (PStroke)nodeArrayList3.get(0);
        tsemicolonNode5 = (TSemicolon)nodeArrayList4.get(0);
        pstrokewidthNode6 = (PStrokewidth)nodeArrayList5.get(0);
        tcomillasNode7 = (TComillas)nodeArrayList6.get(0);

        plinestyleNode1 = new ALinestyle(tstylewNode2, tcomillasNode3, pstrokeNode4, tsemicolonNode5, pstrokewidthNode6, tcomillasNode7);
        }
	nodeList.add(plinestyleNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new28() /* reduce ALinea */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PLinea plineaNode1;
        {
            // Block
        TLineaEti tlineaetiNode2;
        PX1 px1Node3;
        PX2 px2Node4;
        PY1 py1Node5;
        PY2 py2Node6;
        PLinestyle plinestyleNode7;
        TFinfigura tfinfiguraNode8;
        PFiguras pfigurasNode9;
        tlineaetiNode2 = (TLineaEti)nodeArrayList1.get(0);
        px1Node3 = (PX1)nodeArrayList2.get(0);
        px2Node4 = (PX2)nodeArrayList3.get(0);
        py1Node5 = (PY1)nodeArrayList4.get(0);
        py2Node6 = (PY2)nodeArrayList5.get(0);
        plinestyleNode7 = (PLinestyle)nodeArrayList6.get(0);
        tfinfiguraNode8 = (TFinfigura)nodeArrayList7.get(0);
        pfigurasNode9 = (PFiguras)nodeArrayList8.get(0);

        plineaNode1 = new ALinea(tlineaetiNode2, px1Node3, px2Node4, py1Node5, py2Node6, plinestyleNode7, tfinfiguraNode8, pfigurasNode9);
        }
	nodeList.add(plineaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new29() /* reduce AX1 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PX1 px1Node1;
        {
            // Block
        TX1w tx1wNode2;
        TValor tvalorNode3;
        tx1wNode2 = (TX1w)nodeArrayList1.get(0);
        tvalorNode3 = (TValor)nodeArrayList2.get(0);

        px1Node1 = new AX1(tx1wNode2, tvalorNode3);
        }
	nodeList.add(px1Node1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new30() /* reduce AX2 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PX2 px2Node1;
        {
            // Block
        TX2w tx2wNode2;
        TValor tvalorNode3;
        tx2wNode2 = (TX2w)nodeArrayList1.get(0);
        tvalorNode3 = (TValor)nodeArrayList2.get(0);

        px2Node1 = new AX2(tx2wNode2, tvalorNode3);
        }
	nodeList.add(px2Node1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new31() /* reduce AY1 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PY1 py1Node1;
        {
            // Block
        TY1w ty1wNode2;
        TValor tvalorNode3;
        ty1wNode2 = (TY1w)nodeArrayList1.get(0);
        tvalorNode3 = (TValor)nodeArrayList2.get(0);

        py1Node1 = new AY1(ty1wNode2, tvalorNode3);
        }
	nodeList.add(py1Node1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new32() /* reduce AY2 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PY2 py2Node1;
        {
            // Block
        TY2w ty2wNode2;
        TValor tvalorNode3;
        ty2wNode2 = (TY2w)nodeArrayList1.get(0);
        tvalorNode3 = (TValor)nodeArrayList2.get(0);

        py2Node1 = new AY2(ty2wNode2, tvalorNode3);
        }
	nodeList.add(py2Node1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new33() /* reduce ARectangulo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRectangulo prectanguloNode1;
        {
            // Block
        TRectanguloEti trectanguloetiNode2;
        PX pxNode3;
        PY pyNode4;
        TWidth twidthNode5;
        THeight theightNode6;
        PStyle pstyleNode7;
        trectanguloetiNode2 = (TRectanguloEti)nodeArrayList1.get(0);
        pxNode3 = (PX)nodeArrayList2.get(0);
        pyNode4 = (PY)nodeArrayList3.get(0);
        twidthNode5 = (TWidth)nodeArrayList4.get(0);
        theightNode6 = (THeight)nodeArrayList5.get(0);
        pstyleNode7 = (PStyle)nodeArrayList6.get(0);

        prectanguloNode1 = new ARectangulo(trectanguloetiNode2, pxNode3, pyNode4, twidthNode5, theightNode6, pstyleNode7);
        }
	nodeList.add(prectanguloNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new34() /* reduce AX */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PX pxNode1;
        {
            // Block
        TXw txwNode2;
        TValor tvalorNode3;
        txwNode2 = (TXw)nodeArrayList1.get(0);
        tvalorNode3 = (TValor)nodeArrayList2.get(0);

        pxNode1 = new AX(txwNode2, tvalorNode3);
        }
	nodeList.add(pxNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new35() /* reduce AY */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PY pyNode1;
        {
            // Block
        TYw tywNode2;
        TValor tvalorNode3;
        tywNode2 = (TYw)nodeArrayList1.get(0);
        tvalorNode3 = (TValor)nodeArrayList2.get(0);

        pyNode1 = new AY(tywNode2, tvalorNode3);
        }
	nodeList.add(pyNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new36() /* reduce AElipse */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PElipse pelipseNode1;
        {
            // Block
        TElipseEti telipseetiNode2;
        PCx pcxNode3;
        PCy pcyNode4;
        PRx prxNode5;
        PRy pryNode6;
        PStyle pstyleNode7;
        telipseetiNode2 = (TElipseEti)nodeArrayList1.get(0);
        pcxNode3 = (PCx)nodeArrayList2.get(0);
        pcyNode4 = (PCy)nodeArrayList3.get(0);
        prxNode5 = (PRx)nodeArrayList4.get(0);
        pryNode6 = (PRy)nodeArrayList5.get(0);
        pstyleNode7 = (PStyle)nodeArrayList6.get(0);

        pelipseNode1 = new AElipse(telipseetiNode2, pcxNode3, pcyNode4, prxNode5, pryNode6, pstyleNode7);
        }
	nodeList.add(pelipseNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new37() /* reduce ARx */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRx prxNode1;
        {
            // Block
        TRxw trxwNode2;
        TValor tvalorNode3;
        trxwNode2 = (TRxw)nodeArrayList1.get(0);
        tvalorNode3 = (TValor)nodeArrayList2.get(0);

        prxNode1 = new ARx(trxwNode2, tvalorNode3);
        }
	nodeList.add(prxNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new38() /* reduce ARy */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRy pryNode1;
        {
            // Block
        TRyw trywNode2;
        TValor tvalorNode3;
        trywNode2 = (TRyw)nodeArrayList1.get(0);
        tvalorNode3 = (TValor)nodeArrayList2.get(0);

        pryNode1 = new ARy(trywNode2, tvalorNode3);
        }
	nodeList.add(pryNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new39() /* reduce APoligono */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPoligono ppoligonoNode1;
        {
            // Block
        TPoligonoEti tpoligonoetiNode2;
        TPointsw tpointswNode3;
        TComillas tcomillasNode4;
        PPoints ppointsNode5;
        TComillas tcomillasNode6;
        PStyle pstyleNode7;
        tpoligonoetiNode2 = (TPoligonoEti)nodeArrayList1.get(0);
        tpointswNode3 = (TPointsw)nodeArrayList2.get(0);
        tcomillasNode4 = (TComillas)nodeArrayList3.get(0);
        ppointsNode5 = (PPoints)nodeArrayList4.get(0);
        tcomillasNode6 = (TComillas)nodeArrayList5.get(0);
        pstyleNode7 = (PStyle)nodeArrayList6.get(0);

        ppoligonoNode1 = new APoligono(tpoligonoetiNode2, tpointswNode3, tcomillasNode4, ppointsNode5, tcomillasNode6, pstyleNode7);
        }
	nodeList.add(ppoligonoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new40() /* reduce APoints */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPoints ppointsNode1;
        {
            // Block
        TNumero tnumeroNode2;
        TComa tcomaNode3;
        TNumero tnumeroNode4;
        TEspacio tespacioNode5;
        tnumeroNode2 = (TNumero)nodeArrayList1.get(0);
        tcomaNode3 = (TComa)nodeArrayList2.get(0);
        tnumeroNode4 = (TNumero)nodeArrayList3.get(0);
        tespacioNode5 = (TEspacio)nodeArrayList4.get(0);

        ppointsNode1 = new APoints(tnumeroNode2, tcomaNode3, tnumeroNode4, tespacioNode5);
        }
	nodeList.add(ppointsNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new41() /* reduce APolilinea */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPolilinea ppolilineaNode1;
        {
            // Block
        TPolilineaEti tpolilineaetiNode2;
        TPointsw tpointswNode3;
        TComillas tcomillasNode4;
        PPoints ppointsNode5;
        TComillas tcomillasNode6;
        PStyle pstyleNode7;
        tpolilineaetiNode2 = (TPolilineaEti)nodeArrayList1.get(0);
        tpointswNode3 = (TPointsw)nodeArrayList2.get(0);
        tcomillasNode4 = (TComillas)nodeArrayList3.get(0);
        ppointsNode5 = (PPoints)nodeArrayList4.get(0);
        tcomillasNode6 = (TComillas)nodeArrayList5.get(0);
        pstyleNode7 = (PStyle)nodeArrayList6.get(0);

        ppolilineaNode1 = new APolilinea(tpolilineaetiNode2, tpointswNode3, tcomillasNode4, ppointsNode5, tcomillasNode6, pstyleNode7);
        }
	nodeList.add(ppolilineaNode1);
        return nodeList;
    }



    private static int[][][] actionTable;
/*      {
			{{-1, ERROR, 0}, {11, SHIFT, 1}, },
			{{-1, ERROR, 1}, {7, SHIFT, 3}, },
			{{-1, ERROR, 2}, {45, ACCEPT, -1}, },
			{{-1, ERROR, 3}, {24, SHIFT, 4}, },
			{{-1, ERROR, 4}, {14, SHIFT, 6}, },
			{{-1, REDUCE, 0}, },
			{{-1, ERROR, 6}, {16, SHIFT, 8}, },
			{{-1, ERROR, 7}, {25, SHIFT, 10}, },
			{{-1, ERROR, 8}, {26, SHIFT, 11}, },
			{{-1, ERROR, 9}, {15, SHIFT, 13}, },
			{{-1, REDUCE, 1}, },
			{{-1, ERROR, 11}, {27, SHIFT, 14}, },
			{{-1, ERROR, 12}, {7, SHIFT, 15}, },
			{{-1, REDUCE, 2}, },
			{{-1, REDUCE, 4}, },
			{{-1, ERROR, 15}, {4, SHIFT, 16}, },
			{{-1, ERROR, 16}, {17, SHIFT, 17}, {18, SHIFT, 18}, {19, SHIFT, 19}, {20, SHIFT, 20}, {21, SHIFT, 21}, {22, SHIFT, 22}, {39, SHIFT, 23}, },
			{{-1, ERROR, 17}, {28, SHIFT, 31}, },
			{{-1, ERROR, 18}, {40, SHIFT, 33}, },
			{{-1, ERROR, 19}, {35, SHIFT, 35}, },
			{{-1, ERROR, 20}, {28, SHIFT, 31}, },
			{{-1, ERROR, 21}, {44, SHIFT, 38}, },
			{{-1, ERROR, 22}, {44, SHIFT, 39}, },
			{{-1, REDUCE, 5}, },
			{{-1, REDUCE, 3}, },
			{{-1, REDUCE, 6}, },
			{{-1, REDUCE, 7}, },
			{{-1, REDUCE, 8}, },
			{{-1, REDUCE, 9}, },
			{{-1, REDUCE, 10}, },
			{{-1, REDUCE, 11}, },
			{{-1, ERROR, 31}, {12, SHIFT, 40}, },
			{{-1, ERROR, 32}, {29, SHIFT, 41}, },
			{{-1, ERROR, 33}, {12, SHIFT, 43}, },
			{{-1, ERROR, 34}, {41, SHIFT, 44}, },
			{{-1, ERROR, 35}, {12, SHIFT, 46}, },
			{{-1, ERROR, 36}, {36, SHIFT, 47}, },
			{{-1, ERROR, 37}, {29, SHIFT, 41}, },
			{{-1, ERROR, 38}, {23, SHIFT, 50}, },
			{{-1, ERROR, 39}, {23, SHIFT, 51}, },
			{{-1, REDUCE, 20}, },
			{{-1, ERROR, 41}, {12, SHIFT, 52}, },
			{{-1, ERROR, 42}, {30, SHIFT, 53}, },
			{{-1, REDUCE, 34}, },
			{{-1, ERROR, 44}, {12, SHIFT, 55}, },
			{{-1, ERROR, 45}, {26, SHIFT, 56}, },
			{{-1, REDUCE, 29}, },
			{{-1, ERROR, 47}, {12, SHIFT, 57}, },
			{{-1, ERROR, 48}, {37, SHIFT, 58}, },
			{{-1, ERROR, 49}, {42, SHIFT, 60}, },
			{{-1, ERROR, 50}, {0, SHIFT, 62}, },
			{{-1, ERROR, 51}, {0, SHIFT, 62}, },
			{{-1, REDUCE, 21}, },
			{{-1, ERROR, 53}, {12, SHIFT, 65}, },
			{{-1, ERROR, 54}, {3, SHIFT, 66}, {31, SHIFT, 67}, {32, SHIFT, 68}, {33, SHIFT, 69}, },
			{{-1, REDUCE, 35}, },
			{{-1, ERROR, 56}, {27, SHIFT, 73}, },
			{{-1, REDUCE, 30}, },
			{{-1, ERROR, 58}, {12, SHIFT, 74}, },
			{{-1, ERROR, 59}, {38, SHIFT, 75}, },
			{{-1, ERROR, 60}, {12, SHIFT, 77}, },
			{{-1, ERROR, 61}, {43, SHIFT, 78}, },
			{{-1, ERROR, 62}, {1, SHIFT, 80}, },
			{{-1, ERROR, 63}, {23, SHIFT, 81}, },
			{{-1, ERROR, 64}, {23, SHIFT, 82}, },
			{{-1, REDUCE, 22}, },
			{{-1, ERROR, 66}, {17, SHIFT, 17}, {18, SHIFT, 18}, {19, SHIFT, 19}, {20, SHIFT, 20}, {21, SHIFT, 21}, {22, SHIFT, 22}, {39, SHIFT, 23}, },
			{{-1, ERROR, 67}, {12, SHIFT, 84}, },
			{{-1, ERROR, 68}, {12, SHIFT, 85}, },
			{{-1, ERROR, 69}, {12, SHIFT, 86}, },
			{{-1, ERROR, 70}, {3, SHIFT, 87}, {32, SHIFT, 68}, {33, SHIFT, 69}, },
			{{-1, ERROR, 71}, {3, SHIFT, 90}, {33, SHIFT, 69}, },
			{{-1, ERROR, 72}, {3, SHIFT, 92}, },
			{{-1, ERROR, 73}, {34, SHIFT, 93}, },
			{{-1, REDUCE, 31}, },
			{{-1, ERROR, 75}, {12, SHIFT, 95}, },
			{{-1, ERROR, 76}, {34, SHIFT, 96}, },
			{{-1, REDUCE, 37}, },
			{{-1, ERROR, 78}, {12, SHIFT, 98}, },
			{{-1, ERROR, 79}, {34, SHIFT, 93}, },
			{{-1, ERROR, 80}, {0, SHIFT, 100}, },
			{{-1, ERROR, 81}, {34, SHIFT, 93}, },
			{{-1, ERROR, 82}, {34, SHIFT, 93}, },
			{{-1, REDUCE, 12}, },
			{{-1, REDUCE, 23}, },
			{{-1, REDUCE, 24}, },
			{{-1, REDUCE, 25}, },
			{{-1, ERROR, 87}, {17, SHIFT, 17}, {18, SHIFT, 18}, {19, SHIFT, 19}, {20, SHIFT, 20}, {21, SHIFT, 21}, {22, SHIFT, 22}, {39, SHIFT, 23}, },
			{{-1, ERROR, 88}, {3, SHIFT, 104}, {33, SHIFT, 69}, },
			{{-1, ERROR, 89}, {3, SHIFT, 106}, },
			{{-1, ERROR, 90}, {17, SHIFT, 17}, {18, SHIFT, 18}, {19, SHIFT, 19}, {20, SHIFT, 20}, {21, SHIFT, 21}, {22, SHIFT, 22}, {39, SHIFT, 23}, },
			{{-1, ERROR, 91}, {3, SHIFT, 108}, },
			{{-1, ERROR, 92}, {17, SHIFT, 17}, {18, SHIFT, 18}, {19, SHIFT, 19}, {20, SHIFT, 20}, {21, SHIFT, 21}, {22, SHIFT, 22}, {39, SHIFT, 23}, },
			{{-1, ERROR, 93}, {23, SHIFT, 110}, },
			{{-1, REDUCE, 33}, },
			{{-1, REDUCE, 32}, },
			{{-1, ERROR, 96}, {23, SHIFT, 111}, },
			{{-1, ERROR, 97}, {3, SHIFT, 112}, },
			{{-1, REDUCE, 38}, },
			{{-1, REDUCE, 36}, },
			{{-1, ERROR, 100}, {2, SHIFT, 113}, },
			{{-1, REDUCE, 39}, },
			{{-1, REDUCE, 41}, },
			{{-1, REDUCE, 13}, },
			{{-1, ERROR, 104}, {17, SHIFT, 17}, {18, SHIFT, 18}, {19, SHIFT, 19}, {20, SHIFT, 20}, {21, SHIFT, 21}, {22, SHIFT, 22}, {39, SHIFT, 23}, },
			{{-1, ERROR, 105}, {3, SHIFT, 115}, },
			{{-1, ERROR, 106}, {17, SHIFT, 17}, {18, SHIFT, 18}, {19, SHIFT, 19}, {20, SHIFT, 20}, {21, SHIFT, 21}, {22, SHIFT, 22}, {39, SHIFT, 23}, },
			{{-1, REDUCE, 14}, },
			{{-1, ERROR, 108}, {17, SHIFT, 17}, {18, SHIFT, 18}, {19, SHIFT, 19}, {20, SHIFT, 20}, {21, SHIFT, 21}, {22, SHIFT, 22}, {39, SHIFT, 23}, },
			{{-1, REDUCE, 16}, },
			{{-1, ERROR, 110}, {31, SHIFT, 67}, },
			{{-1, ERROR, 111}, {32, SHIFT, 68}, },
			{{-1, ERROR, 112}, {17, SHIFT, 17}, {18, SHIFT, 18}, {19, SHIFT, 19}, {20, SHIFT, 20}, {21, SHIFT, 21}, {22, SHIFT, 22}, {39, SHIFT, 23}, },
			{{-1, REDUCE, 40}, },
			{{-1, REDUCE, 15}, },
			{{-1, ERROR, 115}, {17, SHIFT, 17}, {18, SHIFT, 18}, {19, SHIFT, 19}, {20, SHIFT, 20}, {21, SHIFT, 21}, {22, SHIFT, 22}, {39, SHIFT, 23}, },
			{{-1, REDUCE, 17}, },
			{{-1, REDUCE, 18}, },
			{{-1, ERROR, 118}, {5, SHIFT, 122}, },
			{{-1, ERROR, 119}, {5, SHIFT, 123}, },
			{{-1, REDUCE, 28}, },
			{{-1, REDUCE, 19}, },
			{{-1, ERROR, 122}, {32, SHIFT, 68}, },
			{{-1, ERROR, 123}, {33, SHIFT, 69}, },
			{{-1, ERROR, 124}, {5, SHIFT, 126}, },
			{{-1, ERROR, 125}, {23, SHIFT, 127}, },
			{{-1, ERROR, 126}, {33, SHIFT, 69}, },
			{{-1, REDUCE, 27}, },
			{{-1, ERROR, 128}, {23, SHIFT, 129}, },
			{{-1, REDUCE, 26}, },
        };*/
    private static int[][][] gotoTable;
/*      {
			{{-1, 2}, },
			{{-1, 5}, },
			{{-1, 7}, },
			{{-1, 9}, },
			{{-1, 12}, },
			{{-1, 24}, {66, 83}, {87, 103}, {90, 107}, {92, 109}, {104, 114}, {106, 116}, {108, 117}, {112, 120}, {115, 121}, },
			{{-1, 25}, },
			{{-1, 32}, {20, 37}, },
			{{-1, 42}, {37, 49}, },
			{{-1, 54}, },
			{{-1, 70}, {110, 118}, },
			{{-1, 71}, {70, 88}, {111, 119}, {122, 124}, },
			{{-1, 72}, {70, 89}, {71, 91}, {88, 105}, {123, 125}, {126, 128}, },
			{{-1, 94}, {79, 99}, {81, 101}, {82, 102}, },
			{{-1, 97}, },
			{{-1, 26}, },
			{{-1, 36}, },
			{{-1, 48}, },
			{{-1, 59}, },
			{{-1, 76}, },
			{{-1, 27}, },
			{{-1, 34}, },
			{{-1, 45}, },
			{{-1, 28}, },
			{{-1, 61}, },
			{{-1, 79}, },
			{{-1, 29}, },
			{{-1, 63}, {51, 64}, },
			{{-1, 30}, },
        };*/
    private static String[] errorMessages;
/*      {
			"expecting: '<!DOCTYPE html'",
			"expecting: '>'",
			"expecting: EOF",
			"expecting: html",
			"expecting: body",
			"expecting: svg eti",
			"expecting: finhtml",
			"expecting: width",
			"expecting: finbody",
			"expecting: height",
			"expecting: tab",
			"expecting: circulo eti, rectangulo eti, linea eti, elipse eti, poligono eti, polilinea eti, finsvg",
			"expecting: cxw",
			"expecting: xw",
			"expecting: x1w",
			"expecting: pointsw",
			"expecting: valor",
			"expecting: cyw",
			"expecting: yw",
			"expecting: x2w",
			"expecting: comillas",
			"expecting: rw",
			"expecting: y1w",
			"expecting: rxw",
			"expecting: numero",
			"expecting: rw, rxw",
			"expecting: '/>', fillw, strokew, strokewidthw",
			"expecting: y2w",
			"expecting: ryw",
			"expecting: ','",
			"expecting: '/>', strokew, strokewidthw",
			"expecting: '/>', strokewidthw",
			"expecting: '/>'",
			"expecting: stylew",
			"expecting: '/>', ';', strokew, strokewidthw",
			"expecting: '/>', ';', strokewidthw",
			"expecting: '/>', comillas",
			"expecting: ' '",
			"expecting: fillw",
			"expecting: strokew",
			"expecting: ';'",
			"expecting: strokewidthw",
        };*/
    private static int[] errors;
/*      {
			0, 1, 2, 3, 4, 2, 5, 6, 7, 8, 2, 9, 1, 6, 1, 10, 11, 12, 13, 14, 12, 15, 15, 8, 8, 8, 8, 8, 8, 8, 8, 16, 17, 16, 18, 16, 19, 17, 20, 20, 17, 16, 21, 18, 16, 7, 19, 16, 22, 23, 24, 24, 25, 16, 26, 7, 9, 22, 16, 27, 16, 28, 29, 20, 20, 26, 11, 16, 16, 16, 30, 31, 32, 33, 27, 16, 33, 28, 16, 33, 24, 33, 33, 8, 34, 35, 36, 11, 31, 32, 11, 32, 11, 20, 8, 33, 20, 32, 33, 8, 37, 8, 8, 8, 11, 32, 11, 8, 11, 8, 38, 39, 11, 20, 8, 11, 8, 8, 40, 40, 8, 8, 39, 41, 40, 20, 41, 32, 20, 8, 
        };*/

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Parser.class.getResourceAsStream("parser.dat")));

            // read actionTable
            int length = s.readInt();
            Parser.actionTable = new int[length][][];
            for(int i = 0; i < Parser.actionTable.length; i++)
            {
                length = s.readInt();
                Parser.actionTable[i] = new int[length][3];
                for(int j = 0; j < Parser.actionTable[i].length; j++)
                {
                for(int k = 0; k < 3; k++)
                {
                    Parser.actionTable[i][j][k] = s.readInt();
                }
                }
            }

            // read gotoTable
            length = s.readInt();
            gotoTable = new int[length][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][2];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                for(int k = 0; k < 2; k++)
                {
                    gotoTable[i][j][k] = s.readInt();
                }
                }
            }

            // read errorMessages
            length = s.readInt();
            errorMessages = new String[length];
            for(int i = 0; i < errorMessages.length; i++)
            {
                length = s.readInt();
                StringBuffer buffer = new StringBuffer();

                for(int j = 0; j < length; j++)
                {
                buffer.append(s.readChar());
                }
                errorMessages[i] = buffer.toString();
            }

            // read errors
            length = s.readInt();
            errors = new int[length];
            for(int i = 0; i < errors.length; i++)
            {
                errors[i] = s.readInt();
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"parser.dat\" is either missing or corrupted.");
        }
    }
}
